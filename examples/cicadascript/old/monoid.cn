class monoid_t (
  t : type
  eqv_t : (t t) -> type
  unit : t
  product : (t t) -> t
  unit_left : (a : t) -> eqv_t (product (a unit) a)
  unit_right : (a : t) -> eqv_t (product (unit a) a)
  product_associative : ([a b c] : t) -> eqv_t (
    product (a product (b c))
    product (product (a b) c))
) {
  as_category () : category_c (
    object_t = unit_t
    arrow_t (_ _) = t
    arrow_eqv_t = eqv_t
    identity = unit
    compose = product
    identity_left = unit_left
    identity_right = unit_right
    compose_associative = product_associative
  )
}
